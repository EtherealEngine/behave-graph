export function mat4SetColumn4(m: any, columnIndex: any, column: any, result?: Mat4): Mat4;
export function mat4SetRow4(m: any, rowIndex: any, row: any, result?: Mat4): Mat4;
export function column4ToMat4(a: any, b: any, c: any, d: any, result?: Mat4): Mat4;
export function mat4Equals(a: any, b: any, tolerance?: number): boolean;
export function mat4Add(a: any, b: any, result?: Mat4): Mat4;
export function mat4Subtract(a: any, b: any, result?: Mat4): Mat4;
export function mat4MultiplyByScalar(a: any, b: any, result?: Mat4): Mat4;
export function mat4Negate(a: any, result?: Mat4): Mat4;
export function mat4Multiply(a: any, b: any, result?: Mat4): Mat4;
export function mat4Determinant(m: any): number;
export function mat4Adjoint(m: any, result?: Mat4): Mat4;
export function mat4Transpose(m: any, result?: Mat4): Mat4;
export function mat4Inverse(m: any, result?: Mat4): Mat4;
export function mat4Mix(a: any, b: any, t: any, result?: Mat4): Mat4;
export function mat4FromArray(array: any, offset?: number, result?: Mat4): Mat4;
export function mat4ToArray(a: any, array: any, offset?: number): void;
export function mat4ToString(a: any): string;
export function mat4Parse(text: any, result?: Mat4): Mat4;
export function mat3ToMat4(a: any, result?: Mat4): Mat4;
export function eulerToMat4(e: any, result?: Mat4): Mat4;
export function quatToMat4(q: any, result?: Mat4): Mat4;
export function scale3ToMat4(s: any, result?: Mat4): Mat4;
export function mat4ToScale3(m: any, result?: Vec3): Vec3;
export function translation3ToMat4(t: any, result?: Mat4): Mat4;
export function mat4ToTranslation3(m: any, result?: Vec3): Vec3;
export function mat4Translate(m: any, t: any, result?: Mat4): Mat4;
export function mat4Scale(m: any, s: any, result?: Mat4): Mat4;
export function mat4RotateByQuat(m: any, q: any, result?: Mat4): Mat4;
export function mat4RotateByEuler(m: any, e: any, result?: Mat4): Mat4;
export function mat4TransformPoint3(m: any, v: any, result?: Vec3): Vec3;
export function mat4TransformNormal3(v: any, m: any, result?: Vec3): Vec3;
export function mat4Perspective(left: any, right: any, top: any, bottom: any, near: any, far: any, result?: Mat4): Mat4;
export function mat4PerspectiveFov(verticalFov: any, near: any, far: any, zoom: any, aspectRatio: any, result?: Mat4): Mat4;
export function mat4Orthogonal(left: any, right: any, top: any, bottom: any, near: any, far: any, result?: Mat4): Mat4;
export function mat4OrthogonalSimple(height: any, center: any, near: any, far: any, zoom: any, aspectRatio?: number, result?: Mat4): Mat4;
export function mat4LookAt(eye: any, target: any, up: any, result?: Mat4): Mat4;
export class Mat4 {
    constructor(elements?: number[]);
    elements: number[];
    clone(result?: Mat4): Mat4;
    set(elements: any): Mat4;
}
import { Vec3 } from './Vec3.js';
