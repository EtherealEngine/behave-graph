export const Constant: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Create: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Elements: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Add: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Subtract: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Negate: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Scale: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Mix: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Mat3ToEuler: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Mat4ToEuler: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const QuatToEuler: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Equal: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
