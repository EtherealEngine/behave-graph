export const Constant: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Create: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Elements: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Negate: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Multiply: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Scale: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Length: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Normalize: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Dot: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Ln: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Exp: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Pow: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Mat3ToQuat: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Mat4ToQuat: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const EulerToQuat: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const AngleAxisToQuat: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Slerp: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Equal: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
