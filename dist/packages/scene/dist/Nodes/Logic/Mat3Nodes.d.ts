export const Constant: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Column3ToMat3: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const SetColumn: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const SetRow: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Elements: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Add: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Subtract: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Negate: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Scale: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Determinant: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Inverse: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Mat4ToMat3: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Transpose: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Multiply: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Mix: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Equal: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const EulerToMat3: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const QuatToMat3: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Scale2ToMat3: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Mat3ToScale2: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Translation2ToMat3: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
export const Mat3ToTranslation3: import("@behave-graph/core").IFunctionNodeDefinition<() => import("@behave-graph/core").SocketsList, () => import("@behave-graph/core").SocketsList, import("@behave-graph/core").NodeConfigurationDescription>;
