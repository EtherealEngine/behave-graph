export declare const Constant: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Column3ToMat3: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const SetColumn: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const SetRow: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Elements: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Add: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Subtract: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Negate: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Scale: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Determinant: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Inverse: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Mat4ToMat3: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Transpose: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Multiply: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Mix: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Equal: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const EulerToMat3: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const QuatToMat3: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Scale2ToMat3: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Mat3ToScale2: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Translation2ToMat3: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Mat3ToTranslation3: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
