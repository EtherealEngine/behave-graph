export declare const Constant: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Column4ToMat4: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const SetColumn: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const SetRow: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Elements: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Add: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Subtract: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Negate: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const MultiplyByScalar: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Determinant: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Adjoint: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Inverse: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Transpose: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Mat3ToMat4: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Scale3ToMat4: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Translate3ToMat4: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const QuatToMat4: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const EulerToMat4: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Translate: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Scale: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const RotateByQuat: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const RotateByEuler: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Multiply: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Mix: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Equal: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const TransformPoint3: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const TransformNormal3: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const LookAt: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
