export declare const Constant: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Create: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Elements: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Negate: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Multiply: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Scale: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Length: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Normalize: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Dot: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Ln: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Exp: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Pow: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Mat3ToQuat: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Mat4ToQuat: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const EulerToQuat: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const AngleAxisToQuat: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Slerp: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
export declare const Equal: import("ee-behave-graph-core").IFunctionNodeDefinition<() => import("ee-behave-graph-core").SocketsList, () => import("ee-behave-graph-core").SocketsList, import("ee-behave-graph-core").NodeConfigurationDescription>;
